@use "@/ui/styles/palette";
@use "@/ui/styles/variables";
@use "sass:map";

@mixin sub-text-styles {
  box-sizing: border-box;
  font-size: 0.625rem; // 10px
  padding-inline: 0.75rem;
  width: 100%;
}

.error-text {
  @include sub-text-styles;
  color: map.get(palette.$red-palette, 500);

  &[data-color-mode="dark"] {
    color: map.get(palette.$red-palette, 400);
  }
}

.hint-text {
  @include sub-text-styles;
  color: palette.sub-font-color("light");

  &[data-color-mode="dark"] {
    color: palette.sub-font-color("dark");
  }
}

.input {
  appearance: none;
  background: transparent;
  border-color: palette.border-color("light");
  border-radius: map.get(variables.$border-radius, md);
  border-style: solid;
  border-width: 1px;
  box-sizing: border-box;
  color: palette.default-font-color("light");
  font-family: variables.$font-family;
  font-size: variables.$font-size;
  font-style: normal;
  line-height: 1.5rem; // 24px
  min-height: 3rem;
  outline: 0;
  padding-inline: 1rem;
  text-align: start;
  width: 100%;

  &[data-color-mode="dark"] {
    border-color: palette.border-color("dark");
    color: palette.default-font-color("dark");
  }

  &:focus {
    border-color: palette.focus-border-color("light");

    &[data-color-mode="dark"] {
      border-color: palette.focus-border-color("dark");
    }
  }

  &::placeholder {
    border-color: palette.border-color("light");

    &[data-color-mode="dark"] {
      border-color: palette.border-color("dark");
    }
  }

  &::-ms-input-placeholder {
    border-color: palette.border-color("light");

    &[data-color-mode="dark"] {
      border-color: palette.border-color("dark");
    }
  }

  &--error {
    border-color: map.get(palette.$red-palette, 500);

    &[data-color-mode="dark"] {
      border-color: map.get(palette.$red-palette, 400);
    }
  }
}

.label {
  box-sizing: border-box;
  color: palette.sub-font-color("light");
  font-size: 0.825rem; // 14px
  padding-left: 0.75rem;
  width: 100%;

  &[data-color-mode="dark"] {
    color: palette.sub-font-color("dark");
  }

  &--asterisk {
    color: map.get(palette.$red-palette, 500);
    padding: 0;

    &[data-color-mode="dark"] {
      color: map.get(palette.$red-palette, 400);
    }
  }
}
